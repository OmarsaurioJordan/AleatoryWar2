<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>tipos</parentName>
  <maskName>d_base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nombre="";
grupo=0;
miunidad=-1;
vida=parametros[1];
pedazo=48/vida;//unidad para barra de vida
municion=parametros[3];
canasta=municion-1;
esp=0;//bonificacion velocidad
estado=2;//0:rellenando,1:recargando,2:listo,3:lanzando
vigilia=0;//0:libre,1:atacando,2:buscando,3:celebrando
reloj0=-0.1*parametros[2]+2;//reloj animacion pies
reloj1=parametros[6]*((80+irandom(40))*0.01);//reloj cambios random
reloj2=0;//reloj movimiento brazos
reloj3=t_hits;//disminuye golpes acumulados
hits=0;//golpes acumulados
paso=1+irandom(3);//animacion pies
brazo=0;//animacion brazos
blanco=-1;//enemigo enfocado
otrocoso=-1;//variable auxiliar
huida=0;//angulo para retroceder
ojo=0;//distancia vision extra
extra=0;//extra municion
direccion=irandom(359);
velocidad=0;
metax=x;//ultimo punto enemigo
metay=y;
metros=0;
lider=0;//instancia a seguir
regelizzard=0;//regeneracion pal lizard
riesgo=choose(0.01,-0.01)*irandom(10);
riesgomas=parametros[10]+riesgo;
if(riesgomas&gt;parametros[8]){
    riesgomas=parametros[8];}
riesgomenos=parametros[9]+riesgo;
if(riesgomenos&lt;0.1){
    riesgomenos=0.1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///impactado
if(fabrica=0){
otrocoso=collision_circle(x,y,r_base1,flecha,1,1);
if(otrocoso&gt;0){
    if(otrocoso.nombre=nombre){
        otrocoso=-1;}
    else if(otrocoso.grupo=grupo and grupo&gt;0){
        otrocoso=-1;}}
if(otrocoso&gt;0){
    if(nombre="Dr_Manhattan"){
        with(otrocoso){
            instance_destroy();}}
    else if(vida&gt;0 and vigilia&lt;3){
        if(!(nombre="Tesla" or nombre="220v")){
            vida-=1;
            if(hits&lt;9){
                hits+=1;}
            reloj3=t_hits;
            if(nombre="Lizard" or nombre="Lagarto"){
                regelizzard=0;}}
        else if(irandom(4)=0){
            notifiquenlo(9,nombre,otrocoso.nombre,0);}
        else{
            vida-=1;
            if(hits&lt;9){
                hits+=1;}
            reloj3=t_hits;}
        if(vida=0){
            miunidad.num_instancias-=1;//restando arbol de fuerzas
            miunidad.miclan.num_instancias-=1;
            control.num_instancias-=1;
            if(miunidad.num_instancias=0){
                switch(nombre){
                    case "Boss":
                        notifiquenlo(11,nombre,otrocoso.nombre,hits);
                        sound_play(s_matado); break;
                    case "Zombie":
                        notifiquenlo(10,nombre,otrocoso.nombre,hits);
                        sound_play(s_matado); break;
                    default:
                        notifiquenlo(1,nombre,otrocoso.nombre,hits);
                        sound_play(s_muerte); break;}
                miunidad.miclan.num_unidades-=1;
                if(control.num_unidades=control.top_unidades){
                    miunidad.peor=1;}
                control.num_unidades-=1;}
            else{
                switch(nombre){
                    case "Boss":
                        notifiquenlo(11,nombre,otrocoso.nombre,hits);
                        sound_play(s_matado); break;
                    case "Zombie":
                        notifiquenlo(10,nombre,otrocoso.nombre,hits);
                        sound_play(s_matado); break;
                    default:
                        notifiquenlo(0,nombre,otrocoso.nombre,hits);
                        sound_play(s_muerte); break;}}
            if(miunidad.miclan.num_unidades=0){
                control.num_clanes-=1;
                if(miunidad.miclan.grupo=0){
                    control.existecero=0;}
                else{
                    if(control.idioma=1){
                        switch(grupo){
                            case 1: notifiquenlo(2,"grupo 1 azul","",0); break;
                            case 2: notifiquenlo(2,"grupo 2 rojo","",0); break;
                            case 3: notifiquenlo(2,"grupo 3 verde","",0); break;
                            case 4: notifiquenlo(2,"grupo 4 morado","",0); break;
                            case 5: notifiquenlo(2,"grupo 5 amarillo","",0); break;
                            case 6: notifiquenlo(2,"grupo 6 aqua","",0); break;}}
                    else{
                        switch(grupo){
                            case 1: notifiquenlo(2,"group 1 blue","",0); break;
                            case 2: notifiquenlo(2,"group 2 red","",0); break;
                            case 3: notifiquenlo(2,"group 3 green","",0); break;
                            case 4: notifiquenlo(2,"group 4 purple","",0); break;
                            case 5: notifiquenlo(2,"group 5 yellow","",0); break;
                            case 6: notifiquenlo(2,"group 6 aqua","",0); break;}}}}
            if(parametros[17]=1){//sumando muertes
                if(otrocoso.miunidad.num_instancias&lt;2){
                    otrocoso.miunidad.muertes+=1;}
                else{
                    otrocoso.miunidad.muertes+=1/otrocoso.miunidad.num_instancias;}}
            else{
                otrocoso.miunidad.muertes+=1;}
            if(otrocoso.miunidad.grupo&gt;0){
                otrocoso.miunidad.miclan.muertes+=1;}
            mejorunidad();
            if(instance_exists(otrocoso.mio)){
                if(otrocoso.mio.nombre="Predator" or otrocoso.mio.nombre="Asesino"){
                    if(otrocoso.mio.vida&gt;0){
                        if(otrocoso.mio.vida&lt;parametros[1]*0.5){
                            notifiquenlo(8,otrocoso.mio.nombre,"",0);}
                        otrocoso.mio.vida=parametros[1];}}}
            if(parametros[16]=1){//recompensa por muerte
                if(instance_exists(otrocoso.mio)){
                    with(otrocoso.mio){
                        if(vida&gt;0){
                        switch(nombre){
                            case "Hulk": case "Tanke":
                                if(vida&lt;16){
                                    vida+=1;} break;
                            case "Golem": case "Mole":
                                if(vida&lt;parametros[1]+3){
                                    vida+=1;} break;
                            case "Zombie": case "Predator": case "Asesino": break;
                            case "Boss":
                                if(vida&lt;55){
                                    vida+=5;} break;
                            default:
                                if(vida&lt;parametros[1]){
                                    vida+=1;} break;}}}}}
            var tipin=id;
            with(tipos){//avisando de baja a perseguidores
                if(vida&gt;0 and blanco=tipin){
                    blanco=-1;
                    metax=0;
                    metay=0;
                    vigilia=0;}}
            with(zoombie){
                if(blanco=tipin){
                    blanco=-1;
                    metax=0;
                    metay=0;
                    vigilia=0;}}
            if(otrocoso.nombre="Jack" or otrocoso.nombre="Frijol"){
                if(!collision_circle(x,y,r_base2*1.5,bloque,1,1)){
                    if(!collision_circle(x,y,r_base2,esqueleto,1,1)){
                        if(!collision_circle(x,y,r_base2,muriendo,0,1)){
                            instance_create(x,y,maleza);
                            y+=r_base1;}}}}
            with(otrocoso){
                flechafin(x,y,direction+180);
                instance_destroy();}
            otrocoso=instance_create(xstart,ystart,muriendo);
            otrocoso.x=x;
            otrocoso.y=y;
            otrocoso.miunidad=miunidad;
            switch(nombre){
                case "Spartan":
                    with(instancia){
                        if(nombre="Spartan"){
                            if(vida&gt;0 and vida&lt;parametros[1]){
                                vida+=1;}}} break;
                case "Clon":
                    with(instancia){
                        if(nombre="Clon"){
                            if(vida&gt;0 and vida&lt;parametros[1]){
                                vida+=1;}}} break;
                case "Rock": case "Linux":
                    if(grupo&gt;0){
                        if(control.idioma=1){
                            switch(grupo){
                                case 1: notifiquenlo(6,"grupo 1 azul",nombre,0); break;
                                case 2: notifiquenlo(6,"grupo 2 rojo",nombre,0); break;
                                case 3: notifiquenlo(6,"grupo 3 verde",nombre,0); break;
                                case 4: notifiquenlo(6,"grupo 4 morado",nombre,0); break;
                                case 5: notifiquenlo(6,"grupo 5 amarillo",nombre,0); break;
                                case 6: notifiquenlo(6,"grupo 6 aqua",nombre,0); break;}}
                        else{
                            switch(grupo){
                                case 1: notifiquenlo(6,"group 1 blue",nombre,0); break;
                                case 2: notifiquenlo(6,"group 2 red",nombre,0); break;
                                case 3: notifiquenlo(6,"group 3 green",nombre,0); break;
                                case 4: notifiquenlo(6,"group 4 purple",nombre,0); break;
                                case 5: notifiquenlo(6,"group 5 yellow",nombre,0); break;
                                case 6: notifiquenlo(6,"group 6 aqua",nombre,0); break;}}
                        sound_play(s_curacion);
                        tipin=grupo;
                        with(instancia){
                            if(grupo=tipin and vida&gt;0){
                                switch(nombre){
                                    case "Hulk": case "Tanke":
                                        if(vida&lt;8){
                                            vida=8;}
                                        else if(vida&lt;16){
                                            vida+=1;} break;
                                    case "Golem": case "Mole":
                                        var mmm;
                                        mmm=round(parametros[1]*0.5+1.5);
                                        if(vida&lt;mmm){
                                            vida=mmm;}
                                        else if(vida&lt;parametros[1]+3){
                                            vida+=1;} break;
                                    case "Zombie": break;
                                    case "Boss":
                                        if(vida&lt;50){
                                            vida+=10;} break;
                                    default:
                                        var mmm;
                                        mmm=round(parametros[1]*0.5);
                                        if(vida&lt;mmm){
                                            vida=mmm;}
                                        else if(vida&lt;parametros[1]){
                                            vida+=1;} break;}}}} break;
                case "Joker": case "Magus":
                    if(grupo&gt;0){
                        if(control.idioma=1){
                            switch(grupo){
                                case 1: notifiquenlo(7,"grupo 1 azul",nombre,0); break;
                                case 2: notifiquenlo(7,"grupo 2 rojo",nombre,0); break;
                                case 3: notifiquenlo(7,"grupo 3 verde",nombre,0); break;
                                case 4: notifiquenlo(7,"grupo 4 morado",nombre,0); break;
                                case 5: notifiquenlo(7,"grupo 5 amarillo",nombre,0); break;
                                case 6: notifiquenlo(7,"grupo 6 aqua",nombre,0); break;}}
                        else{
                            switch(grupo){
                                case 1: notifiquenlo(7,"group 1 blue",nombre,0); break;
                                case 2: notifiquenlo(7,"group 2 red",nombre,0); break;
                                case 3: notifiquenlo(7,"group 3 green",nombre,0); break;
                                case 4: notifiquenlo(7,"group 4 purple",nombre,0); break;
                                case 5: notifiquenlo(7,"group 5 yellow",nombre,0); break;
                                case 6: notifiquenlo(7,"group 6 aqua",nombre,0); break;}}
                        sound_play(s_curacion);
                        tipin=grupo;
                        with(instancia){
                            if(grupo=tipin and vida&gt;0){
                                switch(nombre){
                                    case "Hulk": case "Tanke":
                                        vida=16; break;
                                    case "Golem": case "Mole":
                                        vida=parametros[1]+3; break;
                                    case "Zombie": break;
                                    case "Boss":
                                        if(vida&lt;40){
                                            vida+=20;}
                                        else if(vida&lt;50){
                                            vida+=10;} break;
                                    default:
                                        if(vida&lt;parametros[1]){
                                            vida=parametros[1];} break;}}}} break;}
            hayconflicto();
            if(lider=id){//al morir lider se busca nuevo lider
                if(parametros[21]=1){
                    encuentralideres(nombre,0);}
                else{
                    encuentralideres(nombre,grupo)}}
            instance_destroy();}
        else{
            if(parametros[19]=1){
                if(nombre="Zombie"){
                    tile_add(d_verdesal,0,0,32,24,x-16,y-12,p_sangre);}
                else{
                    tile_add(d_manchas,0,0,32,24,x-16,y-12,p_sangre);}}
            if(nombre="Zombie" or nombre="Boss"){
                switch(irandom(3)){
                    case 0: sound_play(s_monster1); break;
                    case 1: sound_play(s_monster2); break;
                    case 2: sound_play(s_monster3); break;
                    case 3: sound_play(s_monster4); break;}}
            else{
                switch(irandom(5)){
                    case 0: sound_play(s_herido1); break;
                    case 1: sound_play(s_herido2); break;
                    case 2: sound_play(s_herido3); break;
                    case 3: sound_play(s_herido4); break;
                    case 4: sound_play(s_herido5); break;
                    case 5: sound_play(s_herido6); break;}}
            with(otrocoso){
                flechafin(x,y,direction+180);
                instance_destroy();}}}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///temporizadores
if(reloj0&gt;0){//animacion caminar
    reloj0-=delta_time*0.00001;}
else{
    if(nombre="Flash" or nombre="Jaguar"){
        reloj0=0.2;}
    else{
        reloj0=-0.1*parametros[2]+2;}
    if(paso=4){
        paso=1;}
    else{
        paso+=1;}}
if(reloj3&gt;0){//combos acumulados
    reloj3-=delta_time*0.00001;}
else{
    reloj3=t_hits;
    if(hits&gt;0){
        hits-=1;}}
if(nombre="Lizard" or nombre="Lagarto"){//tiempo para +1 vida lizard
    if(regelizzard&lt;100){
        regelizzard+=delta_time*0.00001;}
    else{
        regelizzard=0;
        if(vida&gt;0 and vida&lt;parametros[1]){
            vida+=1;}}}
if(reloj1&gt;0){//cambios aleatorios
    reloj1-=delta_time*0.00001;}
else{
    if(nombre="Flash" or nombre="Jaguar"){
        reloj1=10*((80+irandom(40))*0.01);}
    else{
        reloj1=parametros[6]*((80+irandom(40))*0.01);}
    if(velocidad=0){
        velocidad=choose(0,0,(parametros[2]+esp)*((60+irandom(20))*0.01));//1/3 move
        direccion=irandom(359);}
    else{
        if(irandom(3)=0 or (estado=0 and irandom(2)=0)){//3/4 move con estado mayor que 0
            velocidad=0;}
        else{
            velocidad=(parametros[2]+esp)*((60+irandom(20))*0.01);}
        direccion+=choose(-1,1)*choose(0,0,irandom(30),irandom(60),irandom(90));}
    huida=choose(-1,1)*irandom(parametros[12]);
    if(irandom(12)=0 and (nombre!="Chavo" and nombre!="Homero")){
        riesgo=choose(0.01,-0.01)*irandom(10);
        riesgomas=parametros[10]+riesgo;
        if(riesgomas&gt;parametros[8]){
            riesgomas=parametros[8];}
        riesgomenos=parametros[9]+riesgo;
        if(riesgomenos&lt;0.1){
            riesgomenos=0.1;}}
    if(vigilia=0 and estado=2){
        if(municion&lt;parametros[3]+extra){
            if(!collision_circle(x,y,parametros[7]*0.8,movil,1,1)){
                estado=0;
                reloj2=parametros[15];}}}}
if(reloj2&gt;0){//movimiento brazos
    reloj2-=delta_time*0.00001;}
else{
    switch(estado){
        case 0://rellenando
            if(brazo&lt;4){
                brazo+=1;
                if(brazo=2){
                    sound_play(s_relleno);}
                reloj2=parametros[15];}
            else{
                brazo=0;
                if(nombre="Terminator" or nombre="Hellsing" or nombre="Boss"){
                    municion+=3;
                    if(municion&gt;parametros[3]+extra){
                        municion=parametros[3]+extra;}}
                else{
                    municion+=1;}
                canasta=municion;
                if(municion&lt;parametros[3]+extra){
                    reloj2=parametros[15];}
                else{
                    estado=1;
                    if(nombre="Hercules" or nombre="Leonidas"){
                        if(vida&gt;0 and vida&lt;parametros[1]){
                            vida+=1;}}
                    reloj2=parametros[14]*2;}} break;
        case 1://recargando
            if(brazo&lt;8){
                brazo+=1;
                if(brazo=5){
                    if(nombre!="Fenix" and nombre!="Thrall"){
                        canasta-=1;}}
                if(nombre="Rambo" or nombre="Terminator" or nombre="Bond" or nombre="Hellsing"){
                    reloj2=0.2;}
                else{
                    reloj2=parametros[14]*2;}}
            else{
                brazo=0;
                estado=2;} break;
        case 3://lanzando
            if(brazo&lt;6){
                brazo+=1;
                if(nombre="Rambo" or nombre="Bond"){
                    reloj2=0.2;}
                else if(nombre="Terminator" or nombre="Hellsing"){
                    if(parametros[14]&lt;0.4){
                        reloj2=parametros[14];}
                    else{
                        reloj2=0.4;}}
                else{
                    reloj2=parametros[14];}}
            else{
                brazo=0;
                if(blanco&gt;0){
                    if(instance_exists(blanco)){
                        if(!collision_line(x,y,metax,metay,bloque,1,1)){
                            otrocoso=instance_create(x,y,flecha);
                            switch(nombre){
                                case "Tarzan": case "Woody":
                                    otrocoso.direction=point_direction(x,y,metax,metay)+choose(-1,1)*(6+irandom(20)); break;
                                case "Master": case "Sensei":
                                    otrocoso.direction=point_direction(x,y,metax,metay); break;
                                default:
                                    otrocoso.direction=point_direction(x,y,metax,metay)+choose(-1,1)*irandom(parametros[13]); break;}
                            otrocoso.nombre=nombre;
                            otrocoso.grupo=grupo;
                            otrocoso.miunidad=miunidad;
                            otrocoso.mio=id;
                            if(nombre="Thor" or nombre="Draco"){
                                otrocoso.vel=60;
                                otrocoso.reloj=26;}
                            if(nombre!="Fenix" and nombre!="Thrall"){
                                municion-=1;
                                if(municion=0){
                                    estado=0;
                                    reloj2=parametros[15];}
                                else{
                                    estado=1;
                                    reloj2=parametros[14]*2;}}
                            else{
                                estado=1;
                                reloj2=parametros[14]*2;}}
                        else{
                            estado=2;}}
                    else{
                        estado=2;}}
                else{
                    estado=2;}} break;}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///comportamiento
otrocoso=collision_circle(x,y,r_base1,bloque,1,1);//colision con solidos
if(otrocoso&lt;0){
    otrocoso=collision_circle(x,y,r_base1,movil,1,1);}//colision con unidades
if(otrocoso&gt;0){
    direccion=point_direction(otrocoso.x,otrocoso.y,x,y);
    direction=direccion;
    x+=lengthdir_x((parametros[2]+esp)*delta_time*0.00001,direction);
    y+=lengthdir_y((parametros[2]+esp)*delta_time*0.00001,direction);
    huida=choose(-1,1)*irandom(parametros[12]);}
else{
    switch(vigilia){//inteligencia artificial
        case 0://anda libre al azar
            if(fabrica=1){
                otrocoso=instance_nearest(x,y,casa);
                if(point_distance(x,y,otrocoso.x,otrocoso.y)&lt;parametros[7]*0.3){
                    x+=lengthdir_x(parametros[2]*delta_time*0.000008,direccion);
                    y+=lengthdir_y(parametros[2]*delta_time*0.000008,direccion);}
                else if(lider=0 or lider=id){
                    if(velocidad&gt;0){
                        x+=lengthdir_x(velocidad*delta_time*0.00001,direccion);
                        y+=lengthdir_y(velocidad*delta_time*0.00001,direccion);}}
                else if(instance_exists(lider)){
                    if(point_distance(x,y,lider.x,lider.y)&gt;a_lider*parametros[21]){//area entorno al lider
                        mp_potential_step_object(lider.x,lider.y,0,bloque);
                        x+=lengthdir_x((parametros[2]+esp)*delta_time*0.00001,direction);
                        y+=lengthdir_y((parametros[2]+esp)*delta_time*0.00001,direction);
                        direccion=direction;}
                    else if(velocidad&gt;0){
                        x+=lengthdir_x(velocidad*delta_time*0.00001,direccion);
                        y+=lengthdir_y(velocidad*delta_time*0.00001,direccion);}}
                ojeandolos(id);}
            else{
                if(lider=0 or lider=id){
                    if(velocidad&gt;0){
                        x+=lengthdir_x(velocidad*delta_time*0.00001,direccion);
                        y+=lengthdir_y(velocidad*delta_time*0.00001,direccion);}}
                else if(instance_exists(lider)){
                    if(point_distance(x,y,lider.x,lider.y)&gt;a_lider*parametros[21]){//area entorno al lider
                        mp_potential_step_object(lider.x,lider.y,0,bloque);
                        x+=lengthdir_x((parametros[2]+esp)*delta_time*0.00001,direction);
                        y+=lengthdir_y((parametros[2]+esp)*delta_time*0.00001,direction);
                        direccion=direction;}
                    else if(velocidad&gt;0){
                        x+=lengthdir_x(velocidad*delta_time*0.00001,direccion);
                        y+=lengthdir_y(velocidad*delta_time*0.00001,direccion);}}
                buscandolos(id);} break;
        case 1://atacando
            if(blanco&gt;0){
                if(instance_exists(blanco)){
                    if(fabrica=1){
                        otrocoso=collision_circle(x,y,100,zoombie,1,1);}
                    else{
                        otrocoso=collision_circle(x,y,100,tipos,1,1);}
                    if(otrocoso&gt;0){
                        if(otrocoso!=blanco and otrocoso.nombre!=nombre){
                            if(otrocoso.grupo!=grupo or grupo=0){
                                if(!collision_line(x,y,otrocoso.x,otrocoso.y,bloque,1,1)){
                                    blanco=otrocoso;}}}}
                    if(estado&lt;3 and irandom(40)=0){//posibilidad cambio de blanco
                        if(fabrica=1){
                            ojeandolos(id);}
                        else{
                            buscandolos(id);}}
                    metax=blanco.x;
                    metay=blanco.y;
                    metros=point_distance(x,y,metax,metay);
                    if(metros&gt;parametros[7]+ojo or collision_line(x,y,metax,metay,bloque,1,1)){
                        vigilia=2;}
                    else{
                        if(ojo!=1){//ojo=1 significa chavo u homero
                            if(metros&lt;(parametros[7]+ojo)*parametros[8] and estado=2 and municion&gt;0){
                                brazo=0;
                                estado=3;
                                reloj2=parametros[14];}}
                        if(estado=0){
                            if(metros&lt;parametros[7]*(parametros[11]+riesgo)){
                                direction=point_direction(metax,metay,x,y)+huida;
                                x+=lengthdir_x((parametros[2]+esp)*delta_time*0.00001,direction);
                                y+=lengthdir_y((parametros[2]+esp)*delta_time*0.00001,direction);
                                direccion=direction;}
                            else{
                                x+=lengthdir_x((parametros[2]+esp)*delta_time*0.000008,direccion);
                                y+=lengthdir_y((parametros[2]+esp)*delta_time*0.000008,direccion);}}
                        else if(lider=0 or lider=id){
                            if(metros&gt;parametros[7]*riesgomas){
                                mp_potential_step_object(metax,metay,0,bloque);
                                x+=lengthdir_x((parametros[2]+esp)*delta_time*0.00001,direction);
                                y+=lengthdir_y((parametros[2]+esp)*delta_time*0.00001,direction);
                                direccion=direction;}
                            else if(metros&lt;parametros[7]*riesgomenos and blanco.ojo!=1){
                                direction=point_direction(metax,metay,x,y)+huida;
                                x+=lengthdir_x((parametros[2]+esp)*delta_time*0.00001,direction);
                                y+=lengthdir_y((parametros[2]+esp)*delta_time*0.00001,direction);
                                direccion=direction;}
                            else{
                                x+=lengthdir_x((parametros[2]+esp)*delta_time*0.000008,direccion);
                                y+=lengthdir_y((parametros[2]+esp)*delta_time*0.000008,direccion);}}
                        else if(instance_exists(lider)){
                            if(point_distance(x,y,lider.x,lider.y)&gt;a_lider*parametros[21]){//area entorno al lider
                                mp_potential_step_object(lider.x,lider.y,0,bloque);
                                x+=lengthdir_x((parametros[2]+esp)*delta_time*0.00001,direction);
                                y+=lengthdir_y((parametros[2]+esp)*delta_time*0.00001,direction);
                                direccion=direction;}
                            else{
                                x+=lengthdir_x((parametros[2]+esp)*delta_time*0.00001,direccion);
                                y+=lengthdir_y((parametros[2]+esp)*delta_time*0.00001,direccion);}}}}
                else{
                    blanco=-1;
                    vigilia=0;}}
            else{
                vigilia=0;} break;
        case 2://buscando
            if(lider=0 or lider=id){
            if(point_distance(x,y,metax,metay)&lt;32){
                vigilia=0;
                if(irandom(6)=0){
                switch(irandom(2)){
                    case 0: sound_play(s_duda1); break;
                    case 1: sound_play(s_duda2); break;
                    case 2: sound_play(s_duda3); break;}}
                metax=0;
                metay=0;}
            else if(estado=0){
                metros=point_distance(x,y,metax,metay);
                if(metros&lt;parametros[7]*(parametros[11]+riesgo)){
                    direction=point_direction(metax,metay,x,y)+huida;
                    x+=lengthdir_x((parametros[2]+esp)*delta_time*0.000009,direction);
                    y+=lengthdir_y((parametros[2]+esp)*delta_time*0.000009,direction);
                    direccion=direction;}
                else if(velocidad&gt;0){
                    x+=lengthdir_x(velocidad*delta_time*0.00001,direccion);
                    y+=lengthdir_y(velocidad*delta_time*0.00001,direccion);}
                if(fabrica=1){
                    ojeandolos(id);}
                else{
                    buscandolos(id);}}
            else{
                mp_potential_step_object(metax,metay,0,bloque);
                x+=lengthdir_x((parametros[2]+esp)*delta_time*0.000008,direction);
                y+=lengthdir_y((parametros[2]+esp)*delta_time*0.000008,direction);
                if(fabrica=1){
                    ojeandolos(id);}
                else{
                    buscandolos(id);}}}
            else{
                vigilia=0;} break;
        case 3://celebrando
            if(velocidad&gt;0){
                x+=lengthdir_x(velocidad*delta_time*0.00001,direccion);
                y+=lengthdir_y(velocidad*delta_time*0.00001,direccion);} break;}}
if(x&lt;32){//limites del mundo
    x=32;
    direccion=huida;
    huida=choose(-1,1)*(100+irandom(60));}
else if(x&gt;room_width-32){
    x=room_width-32;
    direccion=180+huida;
    huida=choose(-1,1)*(100+irandom(60));}
if(y&gt;room_height-44){
    y=room_height-44;
    direccion=90+huida;
    huida=choose(-1,1)*(100+irandom(60));}
else if(y&lt;164){
    y=164;
    direccion=270+huida;
    huida=choose(-1,1)*(100+irandom(60));}
depth=y*-10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_sombra,0,x,y);
draw_set_halign(fa_center);
draw_set_valign(fa_bottom);
//draw_set_font(caracters);
if(ojo=1){//ojo=1 significa chavo u homero
    draw_sprite(d_municion,0,x-6,y-79);}
else{
    draw_sprite(d_municion,canasta,x-6,y-79);}
if(miunidad.mejor=1){
    draw_sprite(d_extras,1,x,y);}
if(nombre="Boss"){
    draw_sprite(d_aura,4,x,y-108);}
else if(nombre="Dr_Manhattan"){
    draw_sprite(d_aura,5,x,y-108);}
if(x=xprevious and y=yprevious){
    draw_sprite(d_patas,5*grupo,x,y);}
else{
    draw_sprite(d_patas,paso+5*grupo,x,y);}
if(parametros[19]=1){
switch(nombre){
    case "Boss":
        if(vida&lt;55){
            draw_sprite(d_heridas,ceil(vida*0.1666)-1,x,y);} break;
    case "Hulk": case "Tanke":
        if(vida&lt;15){
            draw_sprite(d_heridas,ceil(vida*0.625)-1,x,y);} break;
    case "Golem": case "Mole":
        if(parametros[1]&lt;8){
            if(vida&lt;parametros[1]+3){
                draw_sprite(d_heridas,ceil(vida*(10/(parametros[1]+3)))-1,x,y);}}
        else if(vida&lt;parametros[1]+2){
            draw_sprite(d_heridas,ceil(vida*(10/(parametros[1]+3)))-1,x,y);} break;
    case "Zombie":
        if(parametros[1]&gt;2){
            if(vida&lt;parametros[1]-2){
                draw_sprite(d_heridas,ceil(vida*(10/(parametros[1]-2)))-1,x,y);}} break;
    default:
        if(vida&lt;parametros[1]){
            draw_sprite(d_heridas,ceil(vida*(10/parametros[1]))-1,x,y);} break;}}
if(metax=0 or vision=0 or vigilia=3){
    draw_sprite(d_extras,0,x,y);}
else{
    draw_sprite(d_extras,0,x+lengthdir_x(3,point_direction(x,y,metax,metay)),
    y+lengthdir_y(3,point_direction(x,y,metax,metay)));}
if(grupo&gt;0 and muestra_muertes=1){
    draw_text_transformed_colour(x-1,y-55,string(grupo),1.3,1.3,0,c_white,c_white,c_white,c_white,1);
    draw_text_transformed_colour(x+1,y-55,string(grupo),1.3,1.3,0,c_white,c_white,c_white,c_white,1);
    draw_text_transformed_colour(x,y-55,string(grupo),1.3,1.3,0,c_black,c_black,c_black,c_black,1);}
if(muestra_muertes=1 and ojo!=1){
    draw_text_transformed_colour(x+23,y-78,string(floor(miunidad.muertes)),0.8,0.8,0,c_white,c_white,c_white,c_white,1);
    draw_text_transformed_colour(x+25,y-78,string(floor(miunidad.muertes)),0.8,0.8,0,c_white,c_white,c_white,c_white,1);
    draw_text_transformed_colour(x+24,y-78,string(floor(miunidad.muertes)),0.8,0.8,0,c_black,c_black,c_black,c_black,1);}
if(muestra_vidas=1 and nombre!="Dr_Manhattan"){
    draw_set_alpha(0.8);
    draw_rectangle_colour(x-24+vida*pedazo,y-130,x+24,y-126,c_red,c_red,c_red,c_red,0);
    draw_rectangle_colour(x-24,y-130,x-24+vida*pedazo,y-126,c_green,c_green,c_green,c_green,0);
    draw_set_alpha(1);}
if(ojo=1){
    draw_sprite(d_recargando,0,x+9,y-82);
    if(vigilia=3){
        draw_sprite(d_celebra,paso,x-12,y-81);}
    else{
        draw_sprite(d_brazos,0,x-12,y-81);}}
else{
switch(estado){
    case 0:
        draw_sprite(d_rellenando,brazo,x+9,y-82); break;
    case 1:
        draw_sprite(d_brazos,0,x-12,y-81);
        draw_sprite(d_recargando,brazo,x+9,y-82); break;
    case 2:
        if(vigilia=3){
            draw_sprite(d_celebra,paso,x-12,y-81);
            draw_sprite(d_brazos,1,x+9,y-82);}
        else{
            draw_sprite(d_brazos,0,x-12,y-81);
            draw_sprite(d_brazos,1,x+9,y-82);} break;
    case 3:
        draw_sprite(d_brazos,0,x-12,y-81);
        draw_sprite(d_lanzando,brazo,x+9,y-82); break;}}
draw_text_transformed_colour(x,y-130,nombre,1.2,1.2,0,c_black,c_black,c_black,c_black,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
