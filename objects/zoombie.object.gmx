<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>movil</parentName>
  <maskName>d_base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>control.num_zoombies+=1;
nombre="***";
grupo=0;
reloj0=0;//reloj animacion pies
reloj1=20*((80+irandom(40))*0.01);//reloj cambios random
paso=irandom(3);//animacion pies
blanco=-1;//enemigo enfocado
otrocoso=-1;//variable auxiliar
direccion=irandom(359);
velocidad=0;
huida=0;
metros=0;
if(parametros[20]=1){
    metax=room_width*0.5;
    metay=room_height*0.5;
    vigilia=2;}
else{
    metax=x;//ultimo punto enemigo
    metay=y;
    vigilia=0;}//0:libre,1:atacando,2:buscando
ojo=0;
sound_play(s_nuevozombie);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///impactado
otrocoso=collision_circle(x,y,r_base1,flecha,1,1);
if(otrocoso&gt;0){
    control.destruidos+=1;//sumando muertes
    if(parametros[17]=1){
        if(otrocoso.miunidad.num_instancias&lt;2){
            otrocoso.miunidad.muertes+=1;}
        else{
            otrocoso.miunidad.muertes+=1/otrocoso.miunidad.num_instancias;}}
    else{
        otrocoso.miunidad.muertes+=1;}
    if(otrocoso.miunidad.grupo&gt;0){
    otrocoso.miunidad.miclan.muertes+=1;}
    mejorunidad();
    var tipin=id;
    with(tipos){//avisando de baja a perseguidores
        if(vida&gt;0 and blanco=tipin){
            blanco=-1;
            metax=0;
            metay=0;
            vigilia=0;}}
    with(otrocoso){
        if(instance_exists(mio)){
            if(mio.nombre="T_Rex" or mio.nombre="Diodo"){
                if(mio.vida&gt;0 and mio.vida&lt;parametros[1]){
                    mio.vida+=1;}}}
        if(nombre!="Pi" and nombre!="3_1416" and nombre!="Web"){
            flechafin(x,y,direction+180);}
        instance_destroy();}
    instance_create(x,y,desarmando);
    instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///temporizadores
if(reloj0&lt;0.8){//animacion caminar
    reloj0+=delta_time*0.00001;}
else{
    reloj0=0;
    if(paso=3){
        paso=0;}
    else{
        paso+=1;}}
if(reloj1&gt;0){//cambios aleatorios
    reloj1-=delta_time*0.00001;}
else{
    reloj1=20*((70+irandom(60))*0.01);
    if(velocidad=0){
        velocidad=choose(0,0,12*((70+irandom(20))*0.01));//1/3 move
        direccion=irandom(359);}
    else{
        if(irandom(3)=0){//3/4 move
            velocidad=0;}
        else{
            velocidad=12*((70+irandom(20))*0.01);}
        direccion+=choose(-1,1)*choose(0,0,irandom(30),irandom(60),irandom(90));}
    huida=choose(-1,1)*irandom(20);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///comportamiento
otrocoso=collision_circle(x,y,r_base1,bloque,1,1);//colision con solidos
if(otrocoso&lt;0){
    otrocoso=collision_circle(x,y,r_base1+3,movil,1,1);}//colision con unidades
if(otrocoso&gt;0){
    if(object_is_ancestor(otrocoso.object_index,tipos)){
        instance_create(x,y,explotando);
        instance_destroy();}
    else{
        direccion=point_direction(otrocoso.x,otrocoso.y,x,y);
        direction=direccion;
        x+=lengthdir_x(parametros[2]*delta_time*0.00001,direction);
        y+=lengthdir_y(parametros[2]*delta_time*0.00001,direction);}}
else{
    switch(vigilia){//inteligencia artificial
        case 0://anda libre al azar
            if(velocidad&gt;0){
                x+=lengthdir_x(velocidad*delta_time*0.00001,direccion);
                y+=lengthdir_y(velocidad*delta_time*0.00001,direccion);}
            oliendolos(id); break;
        case 1://atacando
            if(blanco&gt;0){
                if(instance_exists(blanco)){
                    metax=blanco.x;
                    metay=blanco.y;
                    metros=point_distance(x,y,metax,metay);
                    if(velocidad=0 and paso=0 and irandom(20)=0){//posibilidad cambio de blanco
                        if(metros&gt;100){
                            oliendolos(id);}}
                    if(metros&gt;450 or collision_line(x,y,metax,metay,bloque,1,1)){
                        vigilia=2;}
                    else{
                        if(metros&lt;75){
                            mp_potential_step_object(metax,metay,0,bloque);
                            x+=lengthdir_x(12*delta_time*0.00001,direction);
                            y+=lengthdir_y(12*delta_time*0.00001,direction);}
                        else{
                            mp_potential_step_object(metax,metay,0,bloque);
                            x+=lengthdir_x(12*delta_time*0.00001,direction+huida);
                            y+=lengthdir_y(12*delta_time*0.00001,direction+huida);}}}
                else{
                    blanco=-1;
                    vigilia=0;}}
            else{
                vigilia=0;} break;
        case 2://buscando
            if(point_distance(x,y,metax,metay)&lt;32){
                vigilia=0;
                metax=0;
                metay=0;}
            else{
                mp_potential_step_object(metax,metay,0,bloque);
                x+=lengthdir_x(12*delta_time*0.000009,direction);
                y+=lengthdir_y(12*delta_time*0.000009,direction);
                oliendolos(id);} break;}}
if(x&lt;32){//limites del mundo
    x=32;
    direccion=irandom(90)-45;}
else if(x&gt;room_width-32){
    x=room_width-32;
    direccion=135+irandom(90);}
if(y&gt;room_height-44){
    y=room_height-44;
    direccion=45+irandom(90);}
else if(y&lt;164){
    y=164;
    direccion=225+irandom(90);}
depth=y*-10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_sombra,0,x,y);
if(x=xprevious and y=yprevious){
    draw_sprite(d_bomba,paso,x,y);}
else{
    draw_sprite(d_bomba,paso+4,x,y);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
